from aiogram import types, Router
from aiogram.filters import Command

from sqlalchemy.ext.asyncio import AsyncSession

from services.admin import try_register_first_admin
from services.utils import is_registered_user, is_user_admin

_admin_commands = """
<b>üë®‚Äçüíª –ö–æ–º–∞–Ω–¥–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>

/cmds - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/add_faculty - –¥–æ–¥–∞—Ç–∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç
/edit_faculty - —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç
/add_department - –¥–æ–¥–∞—Ç–∏ –∫–∞—Ñ–µ–¥—Ä—É
/edit_department - —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∫–∞—Ñ–µ–¥—Ä—É
/add_group - –¥–æ–¥–∞—Ç–∏ –≥—Ä—É–ø—É
/edit_group - —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≥—Ä—É–ø—É
"""

router = Router(name="admin-commands")


@router.message(Command("cmds"))
async def get_admin_commands(msg: types.Message, session: AsyncSession) -> None:
    if (
            await is_registered_user(msg, session=session) and
            await is_user_admin(msg, session=session)
    ):
        await msg.answer(_admin_commands)


@router.message(Command("get_admin"))
async def register_first_admin(msg: types.Message, session: AsyncSession) -> None:
    if await try_register_first_admin(user_id=msg.from_user.id, session=session):
        await msg.answer('–í–∏ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–ª–∏ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.')
